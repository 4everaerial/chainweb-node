name: chainweb
version: 0.1.0.0
synopsis: A Proof-of-Work Parallel-Chain Architecture for Massive Throughput
description: A Proof-of-Work Parallel-Chain Architecture for Massive Throughput.
homepage: https://github.com/kadena-io/chainweb
bug-reports: https://github.com/kadena-io/chainweb/issues
license: AllRightsReserved
license-file: LICENSE
author: Chainweb Dev Team
maintainer: lars@kadena.io
copyright: Copyright (C) 2018 Kadena LLC
cabal-version:  >= 1.10
category: Blockchain, Currency, Bitcoin
build-type: Simple
tested-with:
      GHC == 8.4.3
    , GHC == 8.2.2

extra-source-files:
    CHANGELOG.md
    README.md

source-repository head
    type: git
    location: https://github.com/kadena-io/chainweb.git

-- -------------------------------------------------------------------------- --
-- Chainweb Library
-- -------------------------------------------------------------------------- --

library
    default-language: Haskell2010
    ghc-options:
        -Wall -Wincomplete-record-updates -Wincomplete-uni-patterns
        -Wredundant-constraints
    hs-source-dirs:     src
    exposed-modules:
                    Chainweb.BlockHash
                  , Chainweb.BlockHeader
                  , Chainweb.ChainDB
                  , Chainweb.ChainDB.Persist
                  , Chainweb.ChainDB.SyncSession
                  , Chainweb.ChainId
                  , Chainweb.Difficulty
                  , Chainweb.Graph
                  , Chainweb.NodeId
                  , Chainweb.Time
                  , Chainweb.Utils
                  , Chainweb.Version

                  , Data.DiGraph
                  , Data.Word.Encoding

                  , Numeric.Cast
                  , Numeric.Additive
                  , Numeric.AffineSpace

                  , P2P.Connection
                  , P2P.Node

    other-modules:
                  Chainweb.ChainDB.Entry

    build-depends:
                  aeson >= 1.3
                , async >= 2.2
                , base >= 4.10 && < 5.0
                , base64-bytestring >= 1.0
                , bytes >= 0.15
                , bytestring >= 0.10
                , cereal >= 0.5
                , containers >= 0.5
                , cryptohash-sha512 >= 0.11
                , exceptions
                , hashable >= 1.2
                , largeword >= 1.2
                , lens >= 4.16
                , loglevel >= 0.1
                , paths >= 0.2
                , random >= 1.1
                , random-bytestring >= 0.1
                , reflection >= 2.1
                , resourcet >= 1.2
                , stm >= 2.4
                , streaming >= 0.2
                , streaming-bytestring >= 0.1
                , text >= 1.2
                , time >= 1.8
                , transformers >= 0.5
                , unordered-containers >= 0.2

-- -------------------------------------------------------------------------- --
-- Chainweb Test suite
-- -------------------------------------------------------------------------- --

-- Main test suite for the chainweb public library
--
test-suite chainweb-tests
    default-language: Haskell2010
    ghc-options:
        -Wall -Wincomplete-record-updates -Wincomplete-uni-patterns
        -Wredundant-constraints
    type: exitcode-stdio-1.0
    hs-source-dirs: test
    main-is: ChainwebTests.hs
    ghc-options: -threaded -with-rtsopts=-N
    other-modules:
        Chainweb.Test.ChainDB.Persistence
        Chainweb.Test.Orphans.External
        Chainweb.Test.Orphans.Internal
        Chainweb.Test.Roundtrips
        Chainweb.Test.Utils
    build-depends:
        -- internal
          chainweb

        -- external
        , QuickCheck >= 2.11
        , base
        , bytes >= 0.15
        , bytestring >= 0.10
        , largeword >= 1.2
        , paths >= 0.2
        , quickcheck-instances >= 0.3
        , resourcet >= 1.2
        , streaming >= 0.2
        , tasty >= 1.1
        , tasty-hunit >= 0.9
        , tasty-quickcheck >= 0.10
        , text
        , these >= 0.7
        , unliftio >= 0.2
        , unordered-containers

-- -------------------------------------------------------------------------- --
-- Chainweb Node
-- -------------------------------------------------------------------------- --

-- The application that runs an chainweb node
--
executable chainweb-node
    default-language: Haskell2010
    ghc-options:
        -Wall -Wincomplete-record-updates -Wincomplete-uni-patterns
        -Wredundant-constraints
    hs-source-dirs: node
    main-is: ChainwebNode.hs
    ghc-options: -threaded
    build-depends:
          base
        , chainweb

-- -------------------------------------------------------------------------- --
-- Single Chain End-To-End Example
-- -------------------------------------------------------------------------- --

executable chaindb-trivial-sync-example
    default-language: Haskell2010
    ghc-options:
        -Wall -Wincomplete-record-updates -Wincomplete-uni-patterns
        -Wredundant-constraints
    hs-source-dirs: examples
    main-is: TrivialSync.hs
    ghc-options: -threaded -with-rtsopts=-N
    build-depends:
        -- internal
          chainweb

        -- external
        , async
        , base
        , exceptions
        , lens
        , loglevel
        , mwc-random >= 0.13
        , stm
        , text
        , unordered-containers
        , yet-another-logger >= 0.3

-- -------------------------------------------------------------------------- --
-- Examples for ChainDB usage

executable chaindb-example
    default-language: Haskell2010
    ghc-options:
        -Wall -Wincomplete-record-updates -Wincomplete-uni-patterns
        -Wredundant-constraints
    hs-source-dirs: examples
    main-is: BlockHeaderChainDb.hs
    ghc-options: -threaded -with-rtsopts=-N
    build-depends:
        -- internal
          chainweb

        -- external
        , async
        , base
        , base64-bytestring
        , lens
        , random
        , stm
        , text
        , unordered-containers
        , yet-another-logger

-- -------------------------------------------------------------------------- --
-- P2P example

executable p2p-example-inprocess
    default-language: Haskell2010
    ghc-options:
        -Wall -Wincomplete-record-updates -Wincomplete-uni-patterns
        -Wredundant-constraints
    hs-source-dirs: examples
    main-is: InProcessP2p.hs
    ghc-options: -threaded
    build-depends:
        -- internal
          chainweb

        -- external
        , async
        , base
        , exceptions
        , lens
        , loglevel
        , random
        , text
        , yet-another-logger
