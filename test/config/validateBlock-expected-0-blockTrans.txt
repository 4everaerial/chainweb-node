{"hash":"db919cc6b7dd870d0ae740e014af88dbf4643df3f3ca72cbb8961f5d1dc6a7b9a23ecfc0acb985f8b19173dbcac1f0be1a8ff2183b7f16db3942ef1fa391d03f","sigs":[],"cmd":"{\"payload\":{\"exec\":{\"data\":{\"test-admin-keyset\":[]},\"code\":\"(define-keyset 'test-admin (read-keyset \\\"test-admin-keyset\\\"))\\n\\n(module test1 'test-admin\\n\\n  (defschema account\\n    balance:decimal\\n    amount:decimal\\n    data)\\n\\n  (deftable accounts:{account})\\n\\n  (defun create-account (id init-bal)\\n    (insert accounts id\\n         { \\\"balance\\\": init-bal, \\\"amount\\\": init-bal, \\\"data\\\": \\\"Created account\\\" }))\\n\\n  (defun transfer (src dest amount)\\n    \\\"transfer AMOUNT from SRC to DEST for unencrypted accounts\\\"\\n    (debit src amount { \\\"transfer-to\\\": dest })\\n    (credit dest amount { \\\"transfer-from\\\": src }))\\n\\n  (defpact payment (src-entity src dest-entity dest amount)\\n    \\\"Two-phase confidential payment, sending money from SRC at SRC-ENTITY to DEST at DEST-ENTITY.\\\"\\n\\n    (step-with-rollback\\n     src-entity\\n     (let ((result (debit src amount { \\\"transfer-to\\\": dest, \\\"message\\\": \\\"Starting pact\\\" })))\\n       (yield { \\\"result\\\": result, \\\"amount\\\": amount, \\\"tx\\\": (pact-id) }))\\n     (credit src amount { \\\"rollback\\\": (pact-id) }))\\n\\n    (step\\n     dest-entity\\n     (resume { \\\"result\\\":= result, \\\"amount\\\":= debit-amount }\\n       (credit dest debit-amount\\n               { \\\"transfer-from\\\": src, \\\"debit-result\\\": result, \\\"tx\\\": (pact-id) }))))\\n\\n  (defun debit (acct amount data)\\n    \\\"Debit ACCT for AMOUNT, enforcing positive amount and sufficient funds, annotating with DATA\\\"\\n    (enforce-positive amount)\\n    (with-read accounts acct { \\\"balance\\\":= balance }\\n      (check-balance balance amount)\\n      (update accounts acct\\n            { \\\"balance\\\": (- balance amount), \\\"amount\\\": (- amount)\\n            , \\\"data\\\": data })))\\n\\n  (defun credit (acct amount data)\\n    \\\"Credit ACCT for AMOUNT, enforcing positive amount\\\"\\n    (enforce-positive amount)\\n    (with-read accounts acct { \\\"balance\\\":= balance }\\n      (update accounts acct\\n            { \\\"balance\\\": (+ balance amount), \\\"amount\\\": amount\\n            , \\\"data\\\": data })))\\n\\n\\n  (defun read-account (id)\\n    \\\"Read data for account ID\\\"\\n    (+ { \\\"account\\\": id } (read accounts id)))\\n\\n  (defun check-balance (balance amount)\\n    (enforce (<= amount balance) \\\"Insufficient funds\\\"))\\n\\n  (defun enforce-positive (amount)\\n    (enforce (>= amount 0.0) \\\"amount must be positive\\\"))\\n\\n (defun read-all ()\\n   (map (read-account) (keys accounts)))\\n\\n (defun read-all-global ()\\n   (map (read-account) [\\\"Acct1\\\" \\\"Acct2\\\"]))\\n\\n (defun create-global-accounts ()\\n   (create-account \\\"Acct1\\\" 1000000.0)\\n   (create-account \\\"Acct2\\\" 0.0)\\n   (read-all))\\n\\n (defpact create-private-accounts ()\\n   (step \\\"Alice\\\" (create-account \\\"A\\\" 1000.0))\\n   (step \\\"Bob\\\" (create-account \\\"B\\\" 1000.0))\\n   (step \\\"Carol\\\" (create-account \\\"C\\\" 1000.0))\\n   (step \\\"Dinesh\\\" (create-account \\\"D\\\" 1000.0)))\\n\\n)\\n\"}},\"meta\":{\"gasLimit\":0,\"chainId\":\"\",\"gasPrice\":0,\"sender\":\"\",\"fee\":0},\"nonce\":\"1\"}"}{"hash":"4db74aa73fbbfc88cfffbbd047a60a840d706b82754c758411207707a08e4c2641fd9dbf0b93026ecf9012d1b7c31a1d612032a9dd1ed04dceaeebdf8e49ae22","sigs":[],"cmd":"{\"payload\":{\"exec\":{\"data\":{\"test-admin-keyset\":[]},\"code\":\"(create-table test1.accounts)\"}},\"meta\":{\"gasLimit\":0,\"chainId\":\"\",\"gasPrice\":0,\"sender\":\"\",\"fee\":0},\"nonce\":\"1\"}"}{"hash":"3c10d30ad29fbc2e3103d58ce1ee4b4503e4f4dd9327a3286fa5a43bb53c4d290b21e6c21f8c94c29b540eb17efd762c808212c6d7507fc777308090c2461ac9","sigs":[],"cmd":"{\"payload\":{\"exec\":{\"data\":{\"test-admin-keyset\":[]},\"code\":\"(test1.create-global-accounts)\"}},\"meta\":{\"gasLimit\":0,\"chainId\":\"\",\"gasPrice\":0,\"sender\":\"\",\"fee\":0},\"nonce\":\"1\"}"}{"hash":"72a9f128f93479848621b1401e7315e0817f14c90695e0d90e041249c07ad940bbd9d3184dd7ad26de649edc5a25eaec0d3c9657ef7ff971f424a114d171ab85","sigs":[],"cmd":"{\"payload\":{\"exec\":{\"data\":{\"test-admin-keyset\":[]},\"code\":\"(test1.transfer \\\"Acct1\\\" \\\"Acct2\\\" 1.00)\"}},\"meta\":{\"gasLimit\":0,\"chainId\":\"\",\"gasPrice\":0,\"sender\":\"\",\"fee\":0},\"nonce\":\"1\"}"}